

Building binaries
-----------------

To build the binaries for the core/test routines, you can use the given Makefile or the given waf script (based on python) :
- For Makefile, just do make as usual;
- For waf, you can get inspired by the following platform configuration. The generic use is:
    CC=mpicc ./waf configure --prefix=.
    ./waf build
    ./waf install



Platform examples for waf use
-----------------------------

* On Adamis-cluster
CC=mpicc ./waf configure --prefix=./adamis-cluster

* On Carver: 
module unload pgi openmpi 
module load gcc openmpi-gcc 
module load fftw-gnu/3.2.2
module load python/2.7.1
CC=mpicc ./waf configure --fftwdir=$FFTW_ROOT --prefix=./carver --memsize=8

* On Franklin:
module swap PrgEnv-pgi PrgEnv-gnu
module load fftw/3.2.2
./waf configure --fftwdir=/opt/fftw/3.2.2/ --prefix=./franklin --memsize=2 --platform=cray
./waf install

* On Hopper:
module swap PrgEnv-pgi PrgEnv-gnu
module load fftw/3.2.2.1
./waf configure --fftwdir=/opt/fftw/3.2.2.1/ --prefix=./hopper --memsize=1.3 --platform=cray
./waf install

* On Titane:
module list
module load fftw3/3.2.1
module load gsl
CC=mpicc ./waf configure  --ompflag='-openmp' --fftwdir=/applications/fftw3-3.2.1/ --prefix=./titane --memsize=3

* On Vargas: 
module load fftw/3.2.2
module load python/2.6
CC=mpcc_r ./waf configure --prefix=./vargas --platform=aix



Enjoy

